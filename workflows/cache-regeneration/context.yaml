metadata:
  type: "workflow"
  id: "cache-regeneration"
  version: "1.0.0"
  author: "@kingly/system"
  description: "Regenerate AGENTS.md and FULL.md from context scan"

workflow:
  name: "Agent Cache Regeneration"
  trigger: "$agent refresh cache"
  
  steps:
    1_scan_contexts:
      description: "Scan all context directories and dynamic specialists"
      actions:
        - scan: "/Users/jean-patricksmith/digital/kingly/core/agent/contexts/agents/"
        - scan: "/Users/jean-patricksmith/digital/kingly/core/agent/contexts/patterns/"
        - scan: "/Users/jean-patricksmith/digital/kingly/core/agent/contexts/workflows/"
        - scan: "/Users/jean-patricksmith/digital/kingly/core/agent/contexts/types/"
        - scan: "/Users/jean-patricksmith/digital/kingly/core/agent/contexts/themes/"
        - scan: "/Users/jean-patricksmith/digital/kingly/core/agent/contexts/tools/"
        - scan: "/Users/jean-patricksmith/digital/kingly/core/agent/contexts/preferences/"
        - scan: "~/.claude/synths/"
        - scan: "~/.claude/workflows/"
      outputs:
        - agent_list
        - pattern_list
        - workflow_list
        - synth_list
        - workflow_catalog_list
        - counts_by_category
        - total_contexts
        
    2_gather_metadata:
      description: "Collect system information"
      actions:
        - get_timestamp: "date +%Y-%m-%d"
        - get_time: "date +%H:%M:%S"
        - calculate_last_refresh: "relative time since last generation"
        - detect_new_contexts: "compare with previous scan"
      outputs:
        - date
        - time
        - context_scan_time
        - last_refresh_relative
        
    3_build_quick_codes:
      description: "Generate quick code mappings"
      actions:
        - assign_codes: "1a-1j for agents"
        - assign_codes: "2a-2n for patterns"
        - assign_codes: "3a-3i for workflows"
        - assign_codes: "4a-4z for synths"
        - assign_codes: "5a-5z for workflow catalog"
        - assign_codes: "A-E for combinations"
      outputs:
        - agent_codes_map
        - pattern_codes_map
        - workflow_codes_map
        - synth_codes_map
        - workflow_catalog_codes_map
        - combo_definitions
        
    4_generate_agents_md:
      description: "Create AGENTS.md from template"
      template: "templates/AGENTS.md"
      substitutions:
        - Replace all {variables} with gathered data
        - Include system instructions at top
        - Generate user template section
      output: "~/.claude/AGENTS.md"
      
    5_generate_full_md:
      description: "Create FULL.md from template"  
      template: "templates/FULL.md"
      actions:
        - read_full_descriptions: "Extract from context.yaml files"
        - organize_by_category: "Group by type"
        - include_file_paths: "Add context file locations"
      substitutions:
        - Replace all {variables} with full catalog data
        - Include complete descriptions
        - Add file reference paths
      output: "~/.claude/FULL.md"
      
    6_verification:
      description: "Verify generated files"
      checks:
        - validate_yaml: "Ensure all contexts parsed correctly"
        - check_codes: "Verify unique quick codes"
        - test_load: "Load AGENTS.md to verify format"
        - test_full: "Verify FULL.md catalog completeness"
      
    7_report:
      description: "Show completion summary"
      display:
        - "âœ… Scanned {total_contexts} contexts"
        - "âœ… Generated quick codes 1a-{last_agent}, 2a-{last_pattern}, 3a-{last_workflow}"
        - "âœ… Created ~/.claude/AGENTS.md ({date} {time})"
        - "âœ… Created ~/.claude/FULL.md with complete catalog"
        - "ðŸ“Š New contexts since last scan: {new_contexts}"
        
  promotion_commands:
    promote_synth:
      trigger: "$agent promote {synth_code}"
      description: "Move synth specialist to permanent agents/"
      steps:
        - validate_synth_exists: "Check synths/{synth_name}.md exists"
        - create_agent_structure: "Create contexts/agents/{synth_name}/"
        - convert_format: "Transform synth.md â†’ context.yaml"
        - move_file: "synths/{synth_name}.md â†’ contexts/agents/{synth_name}/context.yaml"
        - update_metadata: "Add promotion date, usage stats"
        - regenerate_cache: "Trigger cache refresh"
        - report: "âœ… Promoted {synth_name} to permanent agent {new_code}"
    
    archive_synth:
      trigger: "$agent archive {synth_code}"
      description: "Save synth for future sessions without promoting"
      steps:
        - create_archive: "Create synths/archived/{synth_name}.md"
        - add_metadata: "Include usage stats, session context"
        - preserve_original: "Keep in synths/ for current session"
        - report: "ðŸ“¦ Archived {synth_name} for future use"
    
    usage_analytics:
      trigger: "$agent usage {synth_code}"
      description: "Show synth usage and promotion recommendations"
      steps:
        - analyze_usage: "Count activations, context switches"
        - assess_value: "Calculate effectiveness metrics"
        - recommend_action: "Suggest promote/archive/keep"
        - display_stats: "Show usage dashboard"
  
  error_handling:
    missing_contexts: "Create empty category with note"
    broken_yaml: "Skip and log in broken_contexts list"
    missing_synths: "Create empty synths section"
    promotion_conflicts: "Check for existing agent names"
    
  optimization:
    cache_previous_scan: "Store scan results for diff detection"
    incremental_updates: "Only rescan changed directories"
    synth_usage_tracking: "Log activation patterns for promotion insights"